# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term kitty
set $term alacritty
# set $maincol #057875
# set $maincol #31748f
set $maincol #ffffff
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
## cf. https://tools.suckless.org/dmenu/scripts/dmenu_run_with_command_history/
set $menu dmenu_path | dmenu_run_history -fn "monospace-14" -sb "$maincol" -sf "#000000" | xargs swaymsg exec --
set $poweroff echo "poweroff\nreboot\nsuspend" | dmenu -fn "monospace-14" -sb "$maincol" -sf "#000000" | xargs systemctl

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg /home/tresson/defaults/Pictures/Wallpapers/g8odq3ziyggc1.jpeg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# bindsym $mod+Ctrl+1 focus output eDP-1
# bindsym $mod+Ctrl+2 focus output DP-3

set {
    $laptop  eDP-1
    $monitor DP-3
    }

bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'

### cf. https://www.reddit.com/r/swaywm/comments/gjwr1p/is_it_possible_to_have_the_screen_turn_off_after/

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    xkb_layout fr
    xkb_options "caps:escape_shifted_capslock"
    xkb_numlock enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym Ctrl+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    # bindsym $mod+Shift+Escape exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e        exec $poweroff
    bindsym $mod+Shift+Escape   exec $poweroff
    bindsym $mod+x              exec $poweroff
    # bindsym $mod+Escape exec swaylock -f -c 000000
    bindsym $mod+Escape         exec swaylock -f -c 000000
    bindsym $mod+l              exec swaylock -f -c 000000

# # exit mode
# #

# set $exit "exit: [s]leep, [p]oweroff, [r]eboot, [l]ogout"
# mode $exit {
#     bindsym --to-code {
#         s exec systemctl suspend, mode "default"
#         p exec systemctl poweroff
#         r exec systemctl reboot
#         l exec swaymsg exit
    
#         Return mode "default"
#         Escape mode "default"
#         $mod+x mode "default"
#     }
# }

# bindsym --to-code $mod+x mode $exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand  workspace 1
    bindsym $mod+eacute     workspace 2
    bindsym $mod+quotedbl   workspace 3
    bindsym $mod+apostrophe workspace 4
    bindsym $mod+parenleft  workspace 5
    bindsym $mod+minus      workspace 6
    bindsym $mod+egrave     workspace 7
    bindsym $mod+underscore workspace 8
    bindsym $mod+ccedilla   workspace 9
    bindsym $mod+agrave     workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+ampersand    move container to workspace 1
    bindsym $mod+Shift+eacute       move container to workspace 2
    bindsym $mod+Shift+quotedbl     move container to workspace 3
    bindsym $mod+Shift+apostrophe   move container to workspace 4
    bindsym $mod+Shift+parenleft    move container to workspace 5
    bindsym $mod+Shift+minus        move container to workspace 6
    bindsym $mod+Shift+egrave       move container to workspace 7
    bindsym $mod+Shift+underscore   move container to workspace 8
    bindsym $mod+Shift+ccedilla     move container to workspace 9
    bindsym $mod+Shift+agrave       move container to workspace 10

    # bindsym $mod+Tab workspace prev
    # bindsym $mod+PageUp workspace prev
    bindsym $mod+Tab workspace back_and_forth

    # Move to next wordspace
    bindsym Alt+Shift+Tab   workspace prev
    bindsym Alt+Tab         workspace next
    bindsym $mod+Prior      workspace prev
    bindsym $mod+Next       workspace next
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+p move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+p scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


### app specific

bindsym $mod+Shift+f exec firefox
bindsym $mod+Shift+t exec thunderbird
bindsym $mod+Shift+s exec spotify
bindsym $mod+Shift+g exec qgis
bindsym $mod+Shift+n exec nautilus
bindsym $mod+Shift+k exec krita
## get signal working across platforms
bindsym $mod+Shift+i exec signal-desktop --password-store="gnome-libsecret"
bindsym Print exec shotman --capture region
# for_window [app_id="nautilus"] border none
assign [app_id="firefox"] workspace number 1
assign [app_id="thunderbird"] workspace number 2
assign [class="Chromium"] workspace number 2
assign [app_id="spotify"] workspace number 3
assign [title="Spotify*"] workspace number 3

for_window [app_id="org.gnome.Calculator"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="org.gnome.Nautilus"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_role="dialog"] floating enable
for_window [title="Spotify*"] opacity 0.9

### startup
exec swaymsg "exec firefox"
exec swaymsg "exec thunderbird; exec chromium; layout tabbed"
exec swaymsg "exec nextcloud --background"
## handle notifications with mako
exec mako
# exec swaymsg "exec spotify"


### audio


###  XF86AudioRaiseVolume are not recognized.
### check evtest (run with sudo) to find input codes
### remap with xkb ?

bindsym $mod+Ctrl+Right         exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+
bindsym $mod+Ctrl+Up            exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+
bindsym $mod+Ctrl+Left          exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-
bindsym $mod+Ctrl+Down          exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-
bindsym $mod+Ctrl+m             exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioLowerVolume    exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-
bindsym XF86AudioRaiseVolume    exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+
bindsym XF86AudioMute           exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioPlay   exec playerctl play-pause
bindsym XF86AudioPause  exec playerctl play-pause
bindsym $mod+Ctrl+space exec playerctl play-pause
bindsym XF86AudioNext   exec playerctl next
bindsym XF86AudioPrev   exec playerctl previous
bindsym XF86AudioStop   exec playerctl stop


## brightness
## after usermod -aG video ${USER}
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

### colors

### normal = 6500K
exec swaymsg "exec gammastep"
# client.<class> <border> <background> <text>
## defaults
# client.focused #4c7899 #285577 #ffffff #2e9ef4 #285577
# client.focused $maincol $maincol #ffffff #2e9ef4 $maincol
client.focused $maincol $maincol #000000 #2e9ef4 $maincol

#No titlebars
#
hide_edge_borders --i3 smart_no_gaps
default_border pixel 1

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
swaybar_command waybar
}
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     # status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#     status_command while ~/.config/sway/status.sh; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #323232 #323232 #5c5c5c
#         focused_workspace #ffffff #057875 #ffffff
#     }
# }

include /etc/sway/config.d/*


